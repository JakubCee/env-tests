name: CI/CD xxx v2
on:
  # push:
  #   branches: [main]
  #   paths: ['services/xxx/**', '.github/workflows/envs.yml']
  pull_request:
    branches: [main]
    paths: ['services/xxx/**', '.github/workflows/envs.yml']
  workflow_dispatch:

  # workflow_call:
    
env:
  PROJECT_ROOT: services/xxx/py

jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true
      - name: Install deps
        working-directory: ${{ env.PROJECT_ROOT }}
        run: |
          echo "Simulate uv sync" 
          echo "Github event name: $GITHUB_EVENT_NAME"
          echo "Base ref: $GITHUB_BASE_REF"
          echo "Head ref: $GITHUB_HEAD_REF"
          pwd && ls -al

      - run: export

      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: |
          echo "$GITHUB_CONTEXT"
  
  deploy-dev:
    name: Deploy to dev
    if: github.event_name == 'pull_request' && contains(fromJSON('["opened", "synchronize", "reopened"]'), github.event.action)
    runs-on: ubuntu-latest
    needs: tests
    environment:
      name: dev
      url: "https://dev.example.com"
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true
      - name: Install deps
        working-directory: ${{ env.PROJECT_ROOT }}
        run: |
          echo "Simulate uv sync" 
          echo " Simulate terraform check"
          echo "Github event name: $GITHUB_EVENT_NAME"
          echo "Base ref: $GITHUB_BASE_REF"
          echo "Head ref: $GITHUB_HEAD_REF"
          pwd && ls -al

      - run: echo "Env ${{ vars.ENVIRONMENT }}"
      - run: export
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: |
          echo "$GITHUB_CONTEXT"
    
  deploy-prod:
    name: Deploy to prod
    if: github.ref == 'refs/heads/main' && github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    needs: tests
    environment:
      name: prod
      url: "https://prod.example.com"
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true
      - name: Install deps 
        working-directory: ${{ env.PROJECT_ROOT }}
        run: |
          echo "Simulate uv sync" 
          echo "Github event name: $GITHUB_EVENT_NAME"
          echo "Base ref: $GITHUB_BASE_REF"
          echo "Head ref: $GITHUB_HEAD_REF"
          pwd && ls -al

      - run: echo "Env ${{ vars.ENVIRONMENT }}"
      - run: export
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: |
          echo "$GITHUB_CONTEXT"
