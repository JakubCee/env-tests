name: CI/CD xxx v3
on:
  # push:
  #   branches: [main]
  #   paths: ['services/xxx/**', '.github/workflows/pr-only.yml']
  # pull_request:
  #   branches: [main]
  #   paths: ['services/xxx/**', '.github/workflows/pr-only.yml']
  # workflow_dispatch:
  workflow_call:
    
    inputs:
      project_py_root:
        description: "The root directory of the project for python"
        required: false
        default: "services/xxx/py"
        type: string
      project_infra_root:
        description: "The root directory of the project for infra"
        required: false
        default: "services/xxx/infra"
        type: string


jobs:
  tests:
    runs-on: ubuntu-latest
    env:
      ENVIRONMENT: local
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true

      - name: Install deps
        working-directory: ${{ inputs.project_py_root }}
        run: echo "uv sync --no-dev --extra nox"

      # - run: export

      # - name: Dump GitHub context
      #   env:
      #     GITHUB_CONTEXT: ${{ toJson(github) }}
      #   run: |
      #     echo "$GITHUB_CONTEXT"


  
  deploy-dev:
    name: Deploy to dev
    if: github.event_name == 'pull_request' && contains(fromJSON('["opened", "synchronize", "reopened"]'), github.event.action)
    runs-on: ubuntu-latest
    needs: tests
    env:
      ENVIRONMENT: dev
    environment:
      name: dev
      url: "https://dev.example.com"
    steps:

      - name: Checkout
        uses: actions/checkout@v2

      - name: Check infra
        uses: ./.github/actions/terraform_check
        with:
          env: dev
          working-directory: ${{ inputs.project_infra_root }}

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true

      - name: Install deps
        working-directory: ${{ inputs.project_py_root }}
        run: echo "uv sync --no-dev --extra nox"

      - name: Deploy infra
        uses: ./.github/actions/terraform_deploy
        with:
          env: dev
          working-directory: ${{ inputs.project_infra_root }}
    




  deploy-prod:
    name: Deploy to prod
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: tests
    env:
      ENVIRONMENT: prod
    environment:
      name: prod
      url: "https://prod.example.com"
    steps:

      - name: Checkout
        uses: actions/checkout@v2

      - name: Check infra
        uses: ./.github/actions/terraform_check
        with:
          env: prod
          working-directory: ${{ inputs.project_infra_root }}

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true

      - name: Install deps 
        working-directory: ${{ inputs.project_py_root }}
        run: |
          echo "uv sync"

      - name: Deploy infra
        uses: ./.github/actions/terraform_deploy
        with:
          env: prod
          working-directory: ${{ env.PROJECT_ROOT }}/../infra