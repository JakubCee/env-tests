name: CI/CD template 

on:
  workflow_dispatch:
    inputs:
      project_py_root:
        description: "The root directory of the project for python"
        required: false
        default: "services/xxx/py"
        type: string
      project_infra_root:
        description: "The root directory of the project for infra"
        required: false
        default: "services/xxx/infra"
        type: string

  push:
    branches: [main]
    paths: 
      - 'services/xxx/**'
      - '.github/workflows/template_cicd.yml'

  pull_request:
    branches: [main]
    paths: 
      - 'services/xxx/**'
      - '.github/workflows/template_cicd.yml'

permissions:
  id-token: write # This is required for requesting the JWT
  contents: read  # This is required for actions/checkout
  deployments: write


env:
  PROJECT_PY_ROOT: ${{ github.event.inputs.project_py_root || 'services/xxx/py' }} 
  PROJECT_INFRA_ROOT: ${{ github.event.inputs.project_infra_root || 'services/xxx/infra' }}


jobs:
  tests:
    runs-on: ubuntu-latest
    env:
      ENVIRONMENT: local
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Echo vars
        run: |
          echo "project_py_root: ${{ env.PROJECT_PY_ROOT }}"
          echo "project_infra_root: ${{ env.PROJECT_INFRA_ROOT }}"

      - name: Run nox sessions
        uses: ./.github/actions/nox_sessions
        with:
          working-directory: ${{ env.PROJECT_PY_ROOT }}
          tags: '["gh_tests", "gh_docs"]'

      # - run: export

      # - name: Dump GitHub context
      #   env:
      #     GITHUB_CONTEXT: ${{ toJson(github) }}
      #   run: |
      #     echo "$GITHUB_CONTEXT"


  
  deploy-dev:
    name: Deploy to dev
    if: github.event_name == 'pull_request' && contains(fromJSON('["opened", "synchronize", "reopened"]'), github.event.action)
    runs-on: ubuntu-latest
    needs: tests
    env:
      ENVIRONMENT: dev
    environment:
      name: dev
      url: "https://dev.example.com"
    steps:

      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume:  arn:aws:iam::${{secrets.AWS_ACCOUNT_ID}}:role/GH-actions-OIDC
          role-session-name: gha-session
          aws-region: eu-west-1

      - name: Check infra
        uses: ./.github/actions/terraform_check
        with:
          env: dev
          working-directory: ${{ env.PROJECT_INFRA_ROOT }}

      - name: Run nox sessions
        uses: ./.github/actions/nox_sessions
        with:
          working-directory: ${{ env.PROJECT_PY_ROOT }}
          tags: '["gh_tests", "gh_docs"]'  # TODO: Change

      - name: Deploy infra
        uses: ./.github/actions/terraform_deploy
        with:
          env: dev
          working-directory: ${{ env.PROJECT_INFRA_ROOT }}
    




  deploy-prod:
    name: Deploy to prod
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: tests
    env:
      ENVIRONMENT: prod
    environment:
      name: prod
      url: "https://prod.example.com"
    steps:

      - name: Checkout
        uses: actions/checkout@v2

      - name: Check infra
        uses: ./.github/actions/terraform_check
        with:
          env: prod
          working-directory: ${{ env.PROJECT_INFRA_ROOT }}

      - name: Run nox sessions
        uses: ./.github/actions/nox_sessions
        with:
          working-directory: ${{ env.PROJECT_PY_ROOT }}
          tags: '["gh_tests", "gh_docs"]'  # TODO: Change

      - name: Deploy infra
        uses: ./.github/actions/terraform_deploy
        with:
          env: prod
          working-directory: ${{ env.PROJECT_INFRA_ROOT }}