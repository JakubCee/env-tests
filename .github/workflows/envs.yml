name: CI/CD xxx
on:
  push:
    branches: [main]
    paths: ['services/xxx/**', '.github/workflows/envs.yml']
  pull_request:
    branches: [main]
    paths: ['services/xxx/**', '.github/workflows/envs.yml']
  workflow_dispatch:

  # workflow_call:
    
env:
  PROJECT_ROOT: services/xxx/py

jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true
      - name: Install deps
        working-directory: ${{ env.PROJECT_ROOT }}
        run: echo "Simulate uv sync" && pwd && ls -al
      - run: export

      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: |
          echo "$GITHUB_CONTEXT"
  
  deploy-dev:
    name: Deploy to dev
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    needs: tests
    environment:
      name: dev
      url: "https://dev.example.com"
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true
      - name: Install deps
        working-directory: ${{ env.PROJECT_ROOT }}
        run: |
          echo "Simulate uv sync" 
          echo " Simulate terraform check"
          pwd && ls -al

      - run: echo "Env ${{ vars.ENVIRONMENT }}"
      - run: export
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: |
          echo "$GITHUB_CONTEXT"
    
  deploy-prod:
    name: Deploy to prod
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: tests
    environment:
      name: prod
      url: "https://prod.example.com"
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true
      - name: Install deps 
        working-directory: ${{ env.PROJECT_ROOT }}
        run: echo "Simulate uv sync" && pwd && ls -al

      - run: echo "Env ${{ vars.ENVIRONMENT }}"
      - run: export
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: |
          echo "$GITHUB_CONTEXT"
